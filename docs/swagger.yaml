basePath: /
definitions:
  dtos.GetAllRolesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      totalCount:
        type: integer
    type: object
  dtos.GetAllUsersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.UserResponse'
        type: array
      totalCount:
        type: integer
    type: object
  dtos.LoginUser:
    properties:
      email:
        example: admin@gmail.com
        format: string
        type: string
      password:
        example: "1234567890"
        format: string
        type: string
    required:
    - email
    - password
    type: object
  dtos.RegisterUser:
    properties:
      avatar_user:
        example: U3dhZ2dlciByb2Nrcw==
        format: base64
        type: string
      email:
        example: admin@gmail.com
        type: string
      first_last_name:
        example: usuario administrador
        type: string
      password:
        example: "1234567890"
        minLength: 8
        type: string
    required:
    - avatar_user
    - email
    - first_last_name
    - password
    type: object
  dtos.Response:
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
  dtos.RoleInput:
    properties:
      role_name:
        example: admin
        format: string
        type: string
      role_nivel:
        example: 1
        format: int
        type: integer
    required:
    - role_name
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  models.AsociateRoleToUser:
    properties:
      id_role:
        example: 1
        format: int
        type: integer
      id_user:
        example: 1
        format: int
        type: integer
    type: object
  models.Role:
    properties:
      created_at:
        type: string
      id_role:
        type: integer
      role_name:
        type: string
      role_nivel:
        type: integer
      status:
        type: boolean
      updated_at:
        type: string
    required:
    - role_name
    type: object
  models.UserResponse:
    properties:
      avatar_user:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_last_name:
        type: string
      fk_role:
        type: integer
      is_admin:
        type: boolean
      status:
        type: boolean
      updated_at:
        type: string
      uuid:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: A tag service API in Go using Gin framework.
  title: Tag Service API
  version: "1.0"
paths:
  /api/roles/:
    get:
      consumes:
      - application/json
      description: Return list of roles
      parameters:
      - default: 1
        description: integer default
        in: query
        name: _page
        type: integer
      - default: 10
        description: integer default
        in: query
        name: _limit
        type: integer
      - description: search
        in: query
        name: name_like
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.GetAllRolesResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Bearer: []
      summary: Get all role
      tags:
      - roles
  /api/roles/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a role
      parameters:
      - description: role id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/dtos.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Bearer: []
      summary: Delete a role
      tags:
      - roles
  /api/roles/{id}/show:
    get:
      consumes:
      - application/json
      description: Return a role
      parameters:
      - description: role id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Bearer: []
      summary: Get a role
      tags:
      - roles
  /api/roles/new:
    post:
      consumes:
      - application/json
      description: Register un role for user
      parameters:
      - description: role info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.RoleInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Bearer: []
      summary: Create role
      tags:
      - roles
  /api/user/:
    get:
      consumes:
      - application/json
      description: Return list of users
      parameters:
      - default: 1
        description: integer default
        in: query
        name: _page
        type: integer
      - default: 10
        description: integer default
        in: query
        name: _limit
        type: integer
      - description: search
        in: query
        name: name_like
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.GetAllUsersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Bearer: []
      summary: Get all users
      tags:
      - usuarios
  /api/user/{id}/show:
    get:
      consumes:
      - application/json
      description: Return a user
      parameters:
      - description: role id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Bearer: []
      summary: Get a user
      tags:
      - usuarios
  /api/user/associaterole:
    post:
      consumes:
      - application/json
      description: Asociate role to account
      parameters:
      - description: asociate account
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.AsociateRoleToUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Bearer: []
      summary: Asociate role to account
      tags:
      - usuarios
  /auth/login:
    post:
      consumes:
      - application/json
      description: 'Login account Bearer {token} Example: Bearer Abc123'
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register account in the system
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Create account
      tags:
      - auth
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
